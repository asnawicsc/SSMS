<link rel="stylesheet" href="/vendor/fullcalendar/dist/fullcalendar.css">
<!-- MOMENT JS-->
<script src="/vendor/moment/min/moment-with-locales.js"></script>
<!-- FULLCALENDAR-->
<script src="/vendor/fullcalendar/dist/fullcalendar.js"></script>
<script src="/vendor/fullcalendar/dist/gcal.js"></script>
<div class="content-heading">
   <div>Teacher's Timetable
      <small><%= gettext("welcome")%>!</small>
   </div>

</div>
<div class="row">
  <div class="col-lg-9">
  
      <div class="card mb-3 border-default">
         <div class="card-header text-white bg-primary">Weekly Timetable</div>
         <div class="card-body">
			<div id='calendar'></div>

         </div>
      </div>
              
  </div>
  <div class="col-lg-3">
  	<div class="card mb-3 border-default">
         <div class="card-header text-white bg-primary">Subject - Class blocks</div>
         <div class="card-body" data-toggle="portlet">
            <h5 class="card-title">Drag blocks below:</h5>
            <p class="card-text">The following 'Subject - Class' blocks are assigned by the school, therefore you must arrange your own schedule.</p>
						<div id='external-events'>
						  <p>
						    <strong>Draggable Events</strong>
						  </p>
						  <%= for period <- @periods |> Enum.reject(fn x -> x.teacher != nil  end )do %>
						  	<div class='fc-event' period_id='<%= period.id%>'><%= period.title%></div>
						  <% end %>
		

						</div>
         <a href="/timetable/teacher/<%= @conn.private.plug_session["user_id"] %>/sync_to_gcal"><button class="btn btn-sm btn-secondary" type="submit">Sync to Google Calendar</button></a>
         
         </div>

 
      </div>

  	<div class="card mb-3 border-default" style="display: none;">
         <div class="card-header text-white bg-primary">Add new subject class block</div>
         <div class="card-body">
              <form method="POST" action="/timetable/teacher/<%= @conn.private.plug_session["user_id"] %>/create_event">
              	 <input type="hidden" name="_csrf_token" value="<%= Phoenix.Controller.get_csrf_token %>">
                 <div class="form-group">
                    <label>Email address</label>
                    <input class="form-control" placeholder="Enter email" type="email">
                 </div>
                 <div class="form-group">
                    <label>Password</label>
                    <input class="form-control" placeholder="Password" type="password">
                 </div>
                 <div class="checkbox c-checkbox">
	                  <label>
	                     <input checked="" name="recurring_event" type="checkbox">
	                     <span class="fa fa-check"></span>Recurring Event?</label>
	               </div>

	               <select class="custom-select " name="recurring_frequency">
	                   <option selected="">Open this select menu</option>
	                   <option value="daily">Daily</option>
	                   <option value="weekly">Weekly</option>
	                   <option value="monthly">Monthly</option>
	                </select>

	                <div class="form-group">
                    <label>Until</label>
                    <input class="form-control" id="datetimepicker" placeholder="Until" type="text">
                 </div>

                 <button class="btn btn-sm btn-secondary" type="submit">Submit</button>
              </form>
           </div>
 
      </div>
  </div>

</div>

<script type="text/javascript">
			  $(document).ready(function(){


			  
				jQuery('#datetimepicker').datetimepicker();

					channel.on("show_period", payload => {
						swal("Saved!", "Your event has been saved!", "success");
						$("div.fc-event[period_id='"+payload.period_id+"']").remove();
					})
					channel.on("show_failed_period", payload => {
						swal("No event saved!", "Block doesnt exist!", "info");
	      		$('#calendar').fullCalendar( 'removeEvents', [payload.event_id_str ] );
					})
	

			  $('#external-events .fc-event').each(function() {

			    // store data so the calendar knows to render an event upon drop
			   var period_id = $(this).attr("period_id")
			    $(this).data('event', {
			    	duration: '00:30',
			      title: $.trim($(this).text()), // use the element's text as the event title
			      stick: true, // maintain when user navigates (see docs on the renderEvent method)
			      period_id: period_id
			    });



			    // make the event draggable using jQuery UI
			    $(this).draggable({
			      zIndex: 999,
			      revert: true,      // will cause the event to go back to its
			      revertDuration: 0  //  original position after the drag
			    });

			  });
			


			  $('#calendar').fullCalendar({
			    // put your options and callbacks here
			    header: { center: 'month,agendaWeek' }, 

			    editable: true,
    			eventLimit: true, // when too many events in a day, show the popover
			    eventSources: [{
			      url: '/timetable/teacher/<%= @conn.private.plug_session["user_id"] %>',
			      timezone: 'UTC',
			      color: 'yellow',    // an option!
			      textColor: 'black'  // an option!
			    }],
			    droppable: true, // this allows things to be dropped onto the calendar
			    drop: function(date, jsEvent, ui, resourceId) {
			    		var target_date = date._d;
						 	var dayWrapper = moment(target_date);
						 	dayWrapper.subtract(8, 'hours');
			    },
			  	eventReceive: function(event) {

						var title = event.title;
						var start_date = event.start._d ;
						var end_date = event.end._d ;
						var dayWrapper = moment(start_date);
						var e_dayWrapper = moment(end_date);
							dayWrapper.subtract(8, 'hours');
						  swal({
						    title: "Are you sure?",
						    text: "You want to save " + title + " on " + dayWrapper.format("dddd, MMMM Do YYYY, h:mm:ss a"),
						    type: "warning",
						    showCancelButton: true,
						    confirmButtonColor: "#5d9cec",
						    confirmButtonText: "Yes, save it!",
						    cancelButtonText: "No, dont save it!",
						    closeOnConfirm: false,
						    closeOnCancel: false
						  }, function(isConfirm) {
						    if (isConfirm) {
						var dayWrapper2 = moment(start_date);
						var e_dayWrapper2 = moment(end_date);
						dayWrapper2.subtract(8, 'hours');
						e_dayWrapper2.subtract(8, 'hours');
						   		channel.push("save_period", {
						   			period_id: event.period_id, 
						   			event_id_str: event._id,
						   			user_id: window.currentUser, 
						   			start_date: dayWrapper2.toISOString(), 
						   			end_date: e_dayWrapper2.toISOString()})

						    } else {
						      swal("Cancelled", "No event saved!", "info");
						 

						      $('#calendar').fullCalendar( 'removeEvents', [event._id ] );
						    }
						  });

				  },
			  	eventDrop: function(event, delta, revertFunc) {
						var title = event.title;
						var start_date = event.start._d ;
						var end_date = event.end._d ;
						var dayWrapper = moment(start_date);
						var e_dayWrapper = moment(end_date);
							dayWrapper.subtract(8, 'hours');
						  swal({
						    title: "Are you sure?",
						    text: "You want to save " + title + " on " + dayWrapper.format("dddd, MMMM Do YYYY, h:mm:ss a"),
						    type: "warning",
						    showCancelButton: true,
						    confirmButtonColor: "#5d9cec",
						    confirmButtonText: "Yes, save it!",
						    cancelButtonText: "No, dont save it!",
						    closeOnConfirm: false,
						    closeOnCancel: false
						  }, function(isConfirm) {
						    if (isConfirm) {
						var dayWrapper2 = moment(start_date);
						var e_dayWrapper2 = moment(end_date);
						dayWrapper2.subtract(8, 'hours');
						e_dayWrapper2.subtract(8, 'hours');
						   		channel.push("save_period", {
						   			period_id: event.period_id, 
						   			event_id_str: event._id,
						   			user_id: window.currentUser, 
						   			start_date: dayWrapper2.toISOString(), 
						   			end_date: e_dayWrapper2.toISOString()})

						    } else {
						      swal("Cancelled", "No event saved!", "info");
						 

						     		      revertFunc();
						    }
						  });
		

			  	},
			  	eventClick: function(calEvent, jsEvent, view) {

		console.log(calEvent)
				    	swal({
						    title: calEvent.title,
						  text: calEvent.description,
						    type: "warning"
					
						  })
				  }
			  });

		
			  })
			</script>