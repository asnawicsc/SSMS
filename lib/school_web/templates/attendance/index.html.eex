<link rel="stylesheet" href="/vendor/fullcalendar/dist/fullcalendar.css">
<!-- MOMENT JS-->
<script src="/vendor/moment/min/moment-with-locales.js"></script>
<!-- FULLCALENDAR-->
<script src="/vendor/fullcalendar/dist/fullcalendar.js"></script>
<script src="/vendor/fullcalendar/dist/gcal.js"></script>
<link rel="stylesheet" href="/css/jquery.skedTape.css">
<script type="text/javascript">
    window.csrf = "<%= Phoenix.Controller.get_csrf_token %>"
</script>


<link rel="stylesheet" type="text/css" href="/vendor/jquery_datetimepicker/jquery.datetimepicker.min.css"/ >
<script src="/vendor/jquery_datetimepicker/jquery.datetimepicker.full.min.js"></script>
<div class="content-heading">
   <div>Listing Attendance
   </div>
</div>

<% semesters = Repo.all( School.Affairs.Semester) %>

<% levels = Map.keys(@classes) %>
<form action=""> 
<div class="row">
  <div class="col-4">
    <div class="card">
      <div class="card-body">
        <h4>Choose a date: </h4>
        <div class="input-group date" id="datetimepicker">
            <input class="form-control date" type="text" name="date" value="<%= Date.utc_today() %>">
            <span class="input-group-append input-group-addon">
               <span class="input-group-text fas fa-calendar-alt"></span>
            </span>
         </div>
     </div>
   </div>
 </div>
</div>

<div class="row">
  
    <%= for level <- levels do %>
    <div class="col-lg-4">
      <div class="card mb-3 border-success">
         <div class="card-header text-white bg-success"><%= level %></div>
         <div class="card-body">
            <table class="table">
              <thead>
                <tr>
                  <th><%= gettext "Class" %></th>

                  <th><%= gettext "Action" %></th>
                </tr>
              </thead>
              <tbody>
                <%= for class <- @classes[level] do %>
                  <tr>
                    <td><%= class.class %> </td>
                    
                    <td><button class="btn btn-labeled btn-info btn-xs" id="<%= class.id %>" type="submit" formaction="/mark_attendance/<%= class.id %>">
                           <span class="btn-label"><i class="fa fa-check"></i></span>Mark Attendance</button></td>
                  </tr>
                <% end %>
              </tbody>
            </table>   
         </div>
      </div>
      </div>
    <% end %>
</div>
</form>
  <div class="col-lg-12">
  
      <div class="card mb-3 border-default"  data-step="2" data-intro="Click on the date or time block on the calendar.">
         <div class="card-header text-white bg-primary">Attendence </div>
        

                        
                         
         <div class="card-body">
      <center><div id='calendar_attendance'></div></center>

         </div>
      </div>
              
  </div>

  
<script type="text/javascript">
  $("input.date").datetimepicker({timepicker:false,format:'Y-m-d'})
</script>


<script type="text/javascript">
        $(document).ready(function(){
  if (RegExp('how_to', 'gi').test(window.location.search)) {
    
    
        introJs().start();
      }

        
        jQuery('.datetimepicker').datetimepicker();

        $(document).change(function(){
        var b = $("input[name='start']").val()
        var a = $("input[name='end']").val()
        var start = moment(b, "YYYY/MM/DD HH:mm");
        var end = moment(a, "YYYY/MM/DD HH:mm");

        $('#calendar_attendance').fullCalendar( 'select', start,  end  )

        }); 


        $("div#create_event").click(function(){
          var teacher_id = $("select[name='teacher_id']").val();
          var subject_id = $("select[name='subject_id']").val();
          var class_id = "<%= @conn.params["class_id"]%>"
              var b = $("input[name='start']").val()
              var a = $("input[name='end']").val()
              var start = moment(b, "YYYY/MM/DD HH:mm");
              var end = moment(a, "YYYY/MM/DD HH:mm");
              var title = "rando"
              swal({
                title: "Are you sure?",
                text: "You want to save " + title + " on " + b,
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#5d9cec",
                confirmButtonText: "Yes, save it!",
                cancelButtonText: "No, dont save it!",
                closeOnConfirm: false,
                closeOnCancel: false
              }, function(isConfirm) {
                if (isConfirm) {
  
          
                  channel.push("save_period", {
                    period_id: 0, 
                    event_id_str: subject_id + "_" + class_id,
                    user_id: teacher_id,
                    semester_id:  window.currentSemester, 
                    institution_id: window.currentInstitute,
                    start_date: start.toISOString(), 
                    end_date: end.toISOString()})

                } else {
                  swal("Cancelled", "No event saved!", "info");
             

                          revertFunc();
                }
              });
        });


        channel.on("show_period", payload => {
          swal("Saved!", "Your event has been saved!", "success");
          $("div.fc-event[period_id='"+payload.period_id+"']").remove();
        })
        channel.on("show_period_new", payload => {
          swal("Saved!", "Your event has been saved!", "success");
           $('#calendar_attendance').fullCalendar( 'refetchEvents' )
        })
        channel.on("show_failed_period", payload => {
          swal("No event saved!", payload.final_reason, "info");
          // $('#calendar').fullCalendar( 'removeEvents', [payload.event_id_str ] );

            $('#calendar_attendance').fullCalendar( 'refetchEvents' )
        })


        $('#external-events .fc-event').each(function() {

          // store data so the calendar knows to render an event upon drop
         var period_id = $(this).attr("period_id")
          $(this).data('event', {
            duration: '00:30',
            title: $.trim($(this).text()), // use the element's text as the event title
            stick: true, // maintain when user navigates (see docs on the renderEvent method)
            period_id: period_id
          });



          // make the event draggable using jQuery UI
          $(this).draggable({
            zIndex: 999,
            revert: true,      // will cause the event to go back to its
            revertDuration: 0  //  original position after the drag
          });

        });
      


        $('#calendar_attendance').fullCalendar({
          // put your options and callbacks here
          header: { center: 'month'}, 
          selectable: true,
           unselectAuto: false,
          editable: true,
          eventLimit: true, // when too many events in a day, show the popover
          eventSources: [{
            url: '/timetable/class/<%= @conn.params["class_id"] %>',
            timezone: 'UTC',
            color: '#5d9cec',    // an option!
            textColor: 'white'  // an option!
          }],
          droppable: true, // this allows things to be dropped onto the calendar
          select: function(start, end, jsEvent, view, resource_list) {
            var start_date = start._d ;
            var end_date = end._d ;
            var dayWrapper = moment(start_date);
            var e_dayWrapper = moment(end_date);
            dayWrapper.subtract(8, 'hours');
            e_dayWrapper.subtract(8, 'hours'); 
            $("input[name='start']").val(dayWrapper.format("YYYY/MM/DD HH:mm"))
            $("input[name='end']").val(e_dayWrapper.format("YYYY/MM/DD HH:mm"))
        
          },

          eventDrop: function(event, delta, revertFunc) {
            var title = event.title;
            var start_date = event.start._d ;
            var end_date = event.end._d ;
            var dayWrapper = moment(start_date);
            var e_dayWrapper = moment(end_date);
              dayWrapper.subtract(0, 'hours');
              swal({
                title: "Are you sure?",
                text: "You want to save " + title + " on " + dayWrapper.format("dddd, MMMM Do YYYY, h:mm:ss a"),
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#5d9cec",
                confirmButtonText: "Yes, save it!",
                cancelButtonText: "No, dont save it!",
                closeOnConfirm: false,
                closeOnCancel: false
              }, function(isConfirm) {
                if (isConfirm) {
            var dayWrapper2 = moment(start_date);
            var e_dayWrapper2 = moment(end_date);
            dayWrapper2.subtract(0, 'hours');
            e_dayWrapper2.subtract(0, 'hours');
                  channel.push("save_period", {
                    period_id: event.period_id, 
                    event_id_str: event._id,
                    user_id: window.currentUser,
                    semester_id:  window.currentSemester, 
                    institution_id: window.currentInstitute, 
                    start_date: dayWrapper2.toISOString(), 
                    end_date: e_dayWrapper2.toISOString()})

                } else {
                  swal("Cancelled", "No event saved!", "info");
             

                          revertFunc();
                }
              });
    

          },
          eventClick: function(calEvent, jsEvent, view) {

      var class_id = "<%= @conn.params["class_id"]%>"

       var mode = $("input[name='check_mode']").val();

       $('#check_mode').click(function() {
    $("#txtAge").toggle(this.checked);
});

  
   
if(document.getElementById('check_mode').checked) {

  

                            swal({
                title: calEvent.title,
                text: calEvent.description,
                type: "success",
          showCancelButton: true, confirmButtonText: "Delete",
          
                cancelButtonText: "Dismiss",
                closeOnConfirm: true,
                closeOnCancel: true

              }, function(isConfirm) {
                if (isConfirm) {
                  window.location.href = "/timetable/delete_event/" + calEvent.period_id+"/"+class_id;
                } 
                else
                {
      
                }
             


              })




} else {











              swal({
                title: calEvent.title,
                text: calEvent.description,
                type: "success",
          showCancelButton: true, confirmButtonText: "Edit",
          
                cancelButtonText: "Dismiss",
                closeOnConfirm: true,
                closeOnCancel: true

              }, function(isConfirm) {
                if (isConfirm) {
                window.location.href = "/timetable/edit_event/" + calEvent.period_id;
                } 
                else
                {
      
                }
             


              })

            }
                



          }
        });

    
        })


    // jQuery('.datetimepicker').datetimepicker();

  //       $(document).change(function(){
  //       var b = $("input[name='recursive_start']").val()
  //       var a = $("input[name='recursive_end']").val()
  //       var recursive_start = moment(b, "YYYY/MM/DD HH:mm");
  //       var recursive_end = moment(a, "YYYY/MM/DD HH:mm");

    //    $('#calendar').fullCalendar( 'select', recursive_start,  recursive_end  )

  //       }); 


  //       $("div#create_recursive_event").click(function(){
  //        var teacher_id = $("select[name='teacher_id']").val();
  //        var subject_id = $("select[name='subject_id']").val();
  //        var class_id = "<%= @conn.params["class_id"]%>"
    //          var b = $("input[name='start']").val()
    //          var a = $("input[name='end']").val()
    //          var start = moment(b, "YYYY/MM/DD HH:mm");
    //          var end = moment(a, "YYYY/MM/DD HH:mm");
  //            var title = "rando"
    //          swal({
    //            title: "Are you sure?",
    //            text: "You want to save " + title + " on " + b,
    //            type: "warning",
    //            showCancelButton: true,
    //            confirmButtonColor: "#5d9cec",
    //            confirmButtonText: "Yes, save it!",
    //            cancelButtonText: "No, dont save it!",
    //            closeOnConfirm: false,
    //            closeOnCancel: false
    //          }, function(isConfirm) {
    //            if (isConfirm) {
  
          
    //              channel.push("save_period", {
    //                period_id: 0, 
    //                event_id_str: subject_id + "_" + class_id,
    //                user_id: teacher_id,
    //                semester_id:  window.currentSemester, 
    //                institution_id: window.currentInstitute,
    //                start_date: start.toISOString(), 
    //                end_date: end.toISOString()})

    //            } else {
    //              swal("Cancelled", "No event saved!", "info");
             

    //                      revertFunc();
    //            }
    //          });
  //       });
      </script>

